{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Utilities\nimport { createRange } from \"../../../util/index.mjs\"; // Types\nconst firstDay = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AG: 0,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AR: 1,\n  AS: 0,\n  AT: 1,\n  AU: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BD: 0,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BR: 0,\n  BS: 0,\n  BT: 0,\n  BW: 0,\n  BY: 1,\n  BZ: 0,\n  CA: 0,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CN: 1,\n  CO: 0,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DM: 0,\n  DO: 0,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  ET: 0,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  'GB-alt-variant': 0,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  GT: 0,\n  GU: 0,\n  HK: 0,\n  HN: 0,\n  HR: 1,\n  HU: 1,\n  ID: 0,\n  IE: 1,\n  IL: 0,\n  IN: 0,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JM: 0,\n  JO: 6,\n  JP: 0,\n  KE: 0,\n  KG: 1,\n  KH: 0,\n  KR: 0,\n  KW: 6,\n  KZ: 1,\n  LA: 0,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MH: 0,\n  MK: 1,\n  MM: 0,\n  MN: 1,\n  MO: 0,\n  MQ: 1,\n  MT: 0,\n  MV: 5,\n  MX: 0,\n  MY: 1,\n  MZ: 0,\n  NI: 0,\n  NL: 1,\n  NO: 1,\n  NP: 0,\n  NZ: 1,\n  OM: 6,\n  PA: 0,\n  PE: 0,\n  PH: 0,\n  PK: 0,\n  PL: 1,\n  PR: 0,\n  PT: 0,\n  PY: 0,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SA: 0,\n  SD: 6,\n  SE: 1,\n  SG: 0,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SV: 0,\n  SY: 6,\n  TH: 0,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  TT: 0,\n  TW: 0,\n  UA: 1,\n  UM: 0,\n  US: 0,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VE: 0,\n  VI: 0,\n  VN: 1,\n  WS: 0,\n  XK: 1,\n  YE: 0,\n  ZA: 0,\n  ZW: 0\n};\nfunction getWeekArray(date, locale) {\n  const weeks = [];\n  let currentWeek = [];\n  const firstDayOfMonth = startOfMonth(date);\n  const lastDayOfMonth = endOfMonth(date);\n  const firstDayWeekIndex = firstDayOfMonth.getDay() - firstDay[locale.slice(-2).toUpperCase()];\n  const lastDayWeekIndex = lastDayOfMonth.getDay() - firstDay[locale.slice(-2).toUpperCase()];\n  for (let i = 0; i < firstDayWeekIndex; i++) {\n    const adjacentDay = new Date(firstDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i));\n    currentWeek.push(adjacentDay);\n  }\n  for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n    const day = new Date(date.getFullYear(), date.getMonth(), i);\n\n    // Add the day to the current week\n    currentWeek.push(day);\n\n    // If the current week has 7 days, add it to the weeks array and start a new week\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n  }\n  for (let i = 1; i < 7 - lastDayWeekIndex; i++) {\n    const adjacentDay = new Date(lastDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() + i);\n    currentWeek.push(adjacentDay);\n  }\n  weeks.push(currentWeek);\n  return weeks;\n}\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\nfunction formatYyyyMmDd(value) {\n  const formattedValue = value.split('-').map(d => d.padStart(2, '0')).join('-');\n  const offsetMin = new Date().getTimezoneOffset() / -60;\n  const offsetSign = offsetMin < 0 ? '-' : '+';\n  const offsetValue = Math.abs(offsetMin).toString().padStart(2, '0');\n  return `${formattedValue}T00:00:00.000${offsetSign}${offsetValue}:00`;\n}\nconst _YYYMMDD = /([12]\\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\\d|3[01]))/;\nfunction date(value) {\n  if (value == null) return new Date();\n  if (value instanceof Date) return value;\n  if (typeof value === 'string') {\n    let parsed;\n    if (_YYYMMDD.test(value)) {\n      parsed = Date.parse(formatYyyyMmDd(value));\n    } else {\n      parsed = Date.parse(value);\n    }\n    if (!isNaN(parsed)) return new Date(parsed);\n  }\n  return null;\n}\nconst sundayJanuarySecond2000 = new Date(2000, 0, 2);\nfunction getWeekdays(locale) {\n  const daysFromSunday = firstDay[locale.slice(-2).toUpperCase()];\n  return createRange(7).map(i => {\n    const weekday = new Date(sundayJanuarySecond2000);\n    weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i);\n    return new Intl.DateTimeFormat(locale, {\n      weekday: 'short'\n    }).format(weekday);\n  });\n}\nfunction format(value, formatString, locale) {\n  const date = new Date(value);\n  let options = {};\n  switch (formatString) {\n    case 'fullDateWithWeekday':\n      options = {\n        weekday: 'long',\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      };\n      break;\n    case 'normalDateWithWeekday':\n      options = {\n        weekday: 'short',\n        day: 'numeric',\n        month: 'short'\n      };\n      break;\n    case 'keyboardDate':\n      options = {};\n      break;\n    case 'monthAndDate':\n      options = {\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'monthAndYear':\n      options = {\n        month: 'long',\n        year: 'numeric'\n      };\n      break;\n    case 'dayOfMonth':\n      options = {\n        day: 'numeric'\n      };\n      break;\n    default:\n      options = {\n        timeZone: 'UTC',\n        timeZoneName: 'short'\n      };\n  }\n  return new Intl.DateTimeFormat(locale, options).format(date);\n}\nfunction addDays(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount);\n  return d;\n}\nfunction addMonths(date, amount) {\n  const d = new Date(date);\n  d.setMonth(d.getMonth() + amount);\n  return d;\n}\nfunction getYear(date) {\n  return date.getFullYear();\n}\nfunction getMonth(date) {\n  return date.getMonth();\n}\nfunction startOfYear(date) {\n  return new Date(date.getFullYear(), 0, 1);\n}\nfunction endOfYear(date) {\n  return new Date(date.getFullYear(), 11, 31);\n}\nfunction isWithinRange(date, range) {\n  return isAfter(date, range[0]) && isBefore(date, range[1]);\n}\nfunction isValid(date) {\n  const d = new Date(date);\n  return d instanceof Date && !isNaN(d.getTime());\n}\nfunction isAfter(date, comparing) {\n  return date.getTime() > comparing.getTime();\n}\nfunction isBefore(date, comparing) {\n  return date.getTime() < comparing.getTime();\n}\nfunction isEqual(date, comparing) {\n  return date.getTime() === comparing.getTime();\n}\nfunction isSameDay(date, comparing) {\n  return date.getDate() === comparing.getDate() && date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\nfunction isSameMonth(date, comparing) {\n  return date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\nfunction getDiff(date, comparing, unit) {\n  const d = new Date(date);\n  const c = new Date(comparing);\n  if (unit === 'month') {\n    return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12;\n  }\n  return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24));\n}\nfunction setYear(date, year) {\n  const d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\nexport class VuetifyDateAdapter {\n  constructor(options) {\n    this.locale = options.locale;\n  }\n  date(value) {\n    return date(value);\n  }\n  toJsDate(date) {\n    return date;\n  }\n  addDays(date, amount) {\n    return addDays(date, amount);\n  }\n  addMonths(date, amount) {\n    return addMonths(date, amount);\n  }\n  getWeekArray(date) {\n    return getWeekArray(date, this.locale);\n  }\n  startOfMonth(date) {\n    return startOfMonth(date);\n  }\n  endOfMonth(date) {\n    return endOfMonth(date);\n  }\n  format(date, formatString) {\n    return format(date, formatString, this.locale);\n  }\n  isEqual(date, comparing) {\n    return isEqual(date, comparing);\n  }\n  isValid(date) {\n    return isValid(date);\n  }\n  isWithinRange(date, range) {\n    return isWithinRange(date, range);\n  }\n  isAfter(date, comparing) {\n    return isAfter(date, comparing);\n  }\n  isBefore(date, comparing) {\n    return !isAfter(date, comparing) && !isEqual(date, comparing);\n  }\n  isSameDay(date, comparing) {\n    return isSameDay(date, comparing);\n  }\n  isSameMonth(date, comparing) {\n    return isSameMonth(date, comparing);\n  }\n  setYear(date, year) {\n    return setYear(date, year);\n  }\n  getDiff(date, comparing, unit) {\n    return getDiff(date, comparing, unit);\n  }\n  getWeekdays() {\n    return getWeekdays(this.locale);\n  }\n  getYear(date) {\n    return getYear(date);\n  }\n  getMonth(date) {\n    return getMonth(date);\n  }\n  startOfYear(date) {\n    return startOfYear(date);\n  }\n  endOfYear(date) {\n    return endOfYear(date);\n  }\n}","map":{"version":3,"names":["createRange","firstDay","AD","AE","AF","AG","AI","AL","AM","AN","AR","AS","AT","AU","AX","AZ","BA","BD","BE","BG","BH","BM","BN","BR","BS","BT","BW","BY","BZ","CA","CH","CL","CM","CN","CO","CR","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","ES","ET","FI","FJ","FO","FR","GB","GE","GF","GP","GR","GT","GU","HK","HN","HR","HU","ID","IE","IL","IN","IQ","IR","IS","IT","JM","JO","JP","KE","KG","KH","KR","KW","KZ","LA","LB","LI","LK","LT","LU","LV","LY","MC","MD","ME","MH","MK","MM","MN","MO","MQ","MT","MV","MX","MY","MZ","NI","NL","NO","NP","NZ","OM","PA","PE","PH","PK","PL","PR","PT","PY","QA","RE","RO","RS","RU","SA","SD","SE","SG","SI","SK","SM","SV","SY","TH","TJ","TM","TR","TT","TW","UA","UM","US","UY","UZ","VA","VE","VI","VN","WS","XK","YE","ZA","ZW","getWeekArray","date","locale","weeks","currentWeek","firstDayOfMonth","startOfMonth","lastDayOfMonth","endOfMonth","firstDayWeekIndex","getDay","slice","toUpperCase","lastDayWeekIndex","i","adjacentDay","Date","setDate","getDate","push","day","getFullYear","getMonth","length","formatYyyyMmDd","value","formattedValue","split","map","d","padStart","join","offsetMin","getTimezoneOffset","offsetSign","offsetValue","Math","abs","toString","_YYYMMDD","parsed","test","parse","isNaN","sundayJanuarySecond2000","getWeekdays","daysFromSunday","weekday","Intl","DateTimeFormat","format","formatString","options","month","year","timeZone","timeZoneName","addDays","amount","addMonths","setMonth","getYear","startOfYear","endOfYear","isWithinRange","range","isAfter","isBefore","isValid","getTime","comparing","isEqual","isSameDay","isSameMonth","getDiff","unit","c","floor","setYear","setFullYear","VuetifyDateAdapter","constructor","toJsDate"],"sources":["../../../../src/labs/date/adapters/vuetify.ts"],"sourcesContent":["// Utilities\nimport { createRange } from '@/util'\n\n// Types\nimport type { DateAdapter } from '../DateAdapter'\n\nconst firstDay: Record<string, number> = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AG: 0,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AR: 1,\n  AS: 0,\n  AT: 1,\n  AU: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BD: 0,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BR: 0,\n  BS: 0,\n  BT: 0,\n  BW: 0,\n  BY: 1,\n  BZ: 0,\n  CA: 0,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CN: 1,\n  CO: 0,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DM: 0,\n  DO: 0,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  ET: 0,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  'GB-alt-variant': 0,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  GT: 0,\n  GU: 0,\n  HK: 0,\n  HN: 0,\n  HR: 1,\n  HU: 1,\n  ID: 0,\n  IE: 1,\n  IL: 0,\n  IN: 0,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JM: 0,\n  JO: 6,\n  JP: 0,\n  KE: 0,\n  KG: 1,\n  KH: 0,\n  KR: 0,\n  KW: 6,\n  KZ: 1,\n  LA: 0,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MH: 0,\n  MK: 1,\n  MM: 0,\n  MN: 1,\n  MO: 0,\n  MQ: 1,\n  MT: 0,\n  MV: 5,\n  MX: 0,\n  MY: 1,\n  MZ: 0,\n  NI: 0,\n  NL: 1,\n  NO: 1,\n  NP: 0,\n  NZ: 1,\n  OM: 6,\n  PA: 0,\n  PE: 0,\n  PH: 0,\n  PK: 0,\n  PL: 1,\n  PR: 0,\n  PT: 0,\n  PY: 0,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SA: 0,\n  SD: 6,\n  SE: 1,\n  SG: 0,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SV: 0,\n  SY: 6,\n  TH: 0,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  TT: 0,\n  TW: 0,\n  UA: 1,\n  UM: 0,\n  US: 0,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VE: 0,\n  VI: 0,\n  VN: 1,\n  WS: 0,\n  XK: 1,\n  YE: 0,\n  ZA: 0,\n  ZW: 0,\n}\n\nfunction getWeekArray (date: Date, locale: string) {\n  const weeks = []\n  let currentWeek = []\n  const firstDayOfMonth = startOfMonth(date)\n  const lastDayOfMonth = endOfMonth(date)\n  const firstDayWeekIndex = firstDayOfMonth.getDay() - firstDay[locale.slice(-2).toUpperCase()]\n  const lastDayWeekIndex = lastDayOfMonth.getDay() - firstDay[locale.slice(-2).toUpperCase()]\n\n  for (let i = 0; i < firstDayWeekIndex; i++) {\n    const adjacentDay = new Date(firstDayOfMonth)\n    adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i))\n    currentWeek.push(adjacentDay)\n  }\n\n  for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n    const day = new Date(date.getFullYear(), date.getMonth(), i)\n\n    // Add the day to the current week\n    currentWeek.push(day)\n\n    // If the current week has 7 days, add it to the weeks array and start a new week\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek)\n      currentWeek = []\n    }\n  }\n\n  for (let i = 1; i < 7 - lastDayWeekIndex; i++) {\n    const adjacentDay = new Date(lastDayOfMonth)\n    adjacentDay.setDate(adjacentDay.getDate() + i)\n    currentWeek.push(adjacentDay)\n  }\n\n  weeks.push(currentWeek)\n\n  return weeks\n}\n\nfunction startOfMonth (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1)\n}\n\nfunction endOfMonth (date: Date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0)\n}\n\nfunction formatYyyyMmDd (value: string): string {\n  const formattedValue = value.split('-')\n    .map(d => d.padStart(2, '0'))\n    .join('-')\n\n  const offsetMin = (new Date().getTimezoneOffset() / -60)\n  const offsetSign = offsetMin < 0 ? '-' : '+'\n  const offsetValue = Math.abs(offsetMin).toString().padStart(2, '0')\n\n  return `${formattedValue}T00:00:00.000${offsetSign}${offsetValue}:00`\n}\n\nconst _YYYMMDD = /([12]\\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\\d|3[01]))/\n\nfunction date (value?: any): Date | null {\n  if (value == null) return new Date()\n\n  if (value instanceof Date) return value\n\n  if (typeof value === 'string') {\n    let parsed\n\n    if (_YYYMMDD.test(value)) {\n      parsed = Date.parse(formatYyyyMmDd(value))\n    } else {\n      parsed = Date.parse(value)\n    }\n\n    if (!isNaN(parsed)) return new Date(parsed)\n  }\n\n  return null\n}\n\nconst sundayJanuarySecond2000 = new Date(2000, 0, 2)\n\nfunction getWeekdays (locale: string) {\n  const daysFromSunday = firstDay[locale.slice(-2).toUpperCase()]\n\n  return createRange(7).map(i => {\n    const weekday = new Date(sundayJanuarySecond2000)\n    weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i)\n    return new Intl.DateTimeFormat(locale, { weekday: 'short' }).format(weekday)\n  })\n}\n\nfunction format (value: Date, formatString: string, locale: string): string {\n  const date = new Date(value)\n\n  let options: Intl.DateTimeFormatOptions = {}\n  switch (formatString) {\n    case 'fullDateWithWeekday':\n      options = { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' }\n      break\n    case 'normalDateWithWeekday':\n      options = { weekday: 'short', day: 'numeric', month: 'short' }\n      break\n    case 'keyboardDate':\n      options = {}\n      break\n    case 'monthAndDate':\n      options = { month: 'long', day: 'numeric' }\n      break\n    case 'monthAndYear':\n      options = { month: 'long', year: 'numeric' }\n      break\n    case 'dayOfMonth':\n      options = { day: 'numeric' }\n      break\n    default:\n      options = { timeZone: 'UTC', timeZoneName: 'short' }\n  }\n\n  return new Intl.DateTimeFormat(locale, options).format(date)\n}\n\nfunction addDays (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setDate(d.getDate() + amount)\n  return d\n}\n\nfunction addMonths (date: Date, amount: number) {\n  const d = new Date(date)\n  d.setMonth(d.getMonth() + amount)\n  return d\n}\n\nfunction getYear (date: Date) {\n  return date.getFullYear()\n}\n\nfunction getMonth (date: Date) {\n  return date.getMonth()\n}\n\nfunction startOfYear (date: Date) {\n  return new Date(date.getFullYear(), 0, 1)\n}\nfunction endOfYear (date: Date) {\n  return new Date(date.getFullYear(), 11, 31)\n}\n\nfunction isWithinRange (date: Date, range: [Date, Date]) {\n  return isAfter(date, range[0]) && isBefore(date, range[1])\n}\n\nfunction isValid (date: any) {\n  const d = new Date(date)\n\n  return d instanceof Date && !isNaN(d.getTime())\n}\n\nfunction isAfter (date: Date, comparing: Date) {\n  return date.getTime() > comparing.getTime()\n}\n\nfunction isBefore (date: Date, comparing: Date) {\n  return date.getTime() < comparing.getTime()\n}\n\nfunction isEqual (date: Date, comparing: Date) {\n  return date.getTime() === comparing.getTime()\n}\n\nfunction isSameDay (date: Date, comparing: Date) {\n  return date.getDate() === comparing.getDate() &&\n    date.getMonth() === comparing.getMonth() &&\n    date.getFullYear() === comparing.getFullYear()\n}\n\nfunction isSameMonth (date: Date, comparing: Date) {\n  return date.getMonth() === comparing.getMonth() &&\n    date.getFullYear() === comparing.getFullYear()\n}\n\nfunction getDiff (date: Date, comparing: Date | string, unit?: string) {\n  const d = new Date(date)\n  const c = new Date(comparing)\n\n  if (unit === 'month') {\n    return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12\n  }\n\n  return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24))\n}\n\nfunction setYear (date: Date, year: number) {\n  const d = new Date(date)\n  d.setFullYear(year)\n  return d\n}\n\nexport class VuetifyDateAdapter implements DateAdapter<Date> {\n  locale: string\n\n  constructor (options: { locale: string }) {\n    this.locale = options.locale\n  }\n\n  date (value?: any) {\n    return date(value)\n  }\n\n  toJsDate (date: Date) {\n    return date\n  }\n\n  addDays (date: Date, amount: number) {\n    return addDays(date, amount)\n  }\n\n  addMonths (date: Date, amount: number) {\n    return addMonths(date, amount)\n  }\n\n  getWeekArray (date: Date) {\n    return getWeekArray(date, this.locale)\n  }\n\n  startOfMonth (date: Date) {\n    return startOfMonth(date)\n  }\n\n  endOfMonth (date: Date) {\n    return endOfMonth(date)\n  }\n\n  format (date: Date, formatString: string) {\n    return format(date, formatString, this.locale)\n  }\n\n  isEqual (date: Date, comparing: Date) {\n    return isEqual(date, comparing)\n  }\n\n  isValid (date: any) {\n    return isValid(date)\n  }\n\n  isWithinRange (date: Date, range: [Date, Date]) {\n    return isWithinRange(date, range)\n  }\n\n  isAfter (date: Date, comparing: Date) {\n    return isAfter(date, comparing)\n  }\n\n  isBefore (date: Date, comparing: Date) {\n    return !isAfter(date, comparing) && !isEqual(date, comparing)\n  }\n\n  isSameDay (date: Date, comparing: Date) {\n    return isSameDay(date, comparing)\n  }\n\n  isSameMonth (date: Date, comparing: Date) {\n    return isSameMonth(date, comparing)\n  }\n\n  setYear (date: Date, year: number) {\n    return setYear(date, year)\n  }\n\n  getDiff (date: Date, comparing: Date | string, unit?: string) {\n    return getDiff(date, comparing, unit)\n  }\n\n  getWeekdays () {\n    return getWeekdays(this.locale)\n  }\n\n  getYear (date: Date) {\n    return getYear(date)\n  }\n\n  getMonth (date: Date) {\n    return getMonth(date)\n  }\n\n  startOfYear (date: Date) {\n    return startOfYear(date)\n  }\n\n  endOfYear (date: Date) {\n    return endOfYear(date)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}